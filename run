#!/usr/bin/env bash
#
# Measure the impact of checkpointing on runtime and S3 requests.
#
# Control: Disable HMT and timeline server.
# Experiment: Enable HMT and timeline server.

set -eu

NUM_REPS=125

SCHEMA_NAME=hudi_hmt
BUCKET_NAME=hudi-hmt

mcli mb -p "minio/$BUCKET_NAME"
spark-sql-hms-hudi -e "CREATE SCHEMA IF NOT EXISTS $SCHEMA_NAME LOCATION 's3a://$BUCKET_NAME/';" &> /dev/null
spark-sql-hms-hudi --database "$SCHEMA_NAME" -e "DROP TABLE IF EXISTS store;" &> /dev/null

for VARIANT in cow_off cow_on mor_off mor_on; do,
    echo "$VARIANT"
    mkdir -p "runtime_{update,scan}/$VARIANT"
    if [[ "$VARIANT" == 'cow_off' ]]; then
        TBLPROPERTIES="TBLPROPERTIES ('type' = 'cow', 'hoodie.spark.sql.insert.into.operation' = 'insert', 'hoodie.metadata.enabled' = false, 'hoodie.table.services.enabled' = false, 'hoodie.embed.timeline.server' = false)"
    if [[ "$VARIANT" == 'cow_on' ]]; then
        TBLPROPERTIES="TBLPROPERTIES ('type' = 'cow', 'hoodie.spark.sql.insert.into.operation' = 'insert')"
    if [[ "$VARIANT" == 'mor_off' ]]; then
        TBLPROPERTIES="TBLPROPERTIES ('type' = 'cow', 'hoodie.spark.sql.insert.into.operation' = 'bulk_insert', 'hoodie.metadata.enabled' = false, 'hoodie.table.services.enabled' = false, 'hoodie.embed.timeline.server' = false)"
    if [[ "$VARIANT" == 'mor_on' ]]; then
        TBLPROPERTIES="TBLPROPERTIES ('type' = 'cow', 'hoodie.spark.sql.insert.into.operation' = 'bulk_insert')"
    else
        TBLPROPERTIES=""
    fi
    spark-sql-hms-hudi --database "$SCHEMA_NAME" -e "CREATE TABLE store (key INT, value INT) USING hudi $TBLPROPERTIES;" &> /dev/null
    for REP in $(seq -w 1 "$NUM_REPS"); do
        # UPDATE OPERATION
        mcli admin trace minio > "trace_update_${VARIANT}_${REP}" &
        PID=$!
        spark-sql-hms-hudi --conf spark.eventLog.enabled=true --conf "spark.eventLog.dir=$PWD/runtime_update/$VARIANT" --database "$SCHEMA_NAME" -e "INSERT INTO store VALUES ($((10#$REP)), 0);" &> /dev/null
        kill -SIGINT $PID
        # TABLE SCAN
        mcli admin trace minio > "trace_scan_${VARIANT}_${REP}" &
        PID=$!
        spark-sql-hms-hudi --conf spark.eventLog.enabled=true --conf "spark.eventLog.dir=$PWD/runtime_scan/$VARIANT" --database "$SCHEMA_NAME" -e "SELECT * FROM store;" &> /dev/null
        kill -SIGINT $PID
        echo "> $REP"
    done
    spark-sql-hms-hudi --database "$SCHEMA_NAME" -e "DROP TABLE store;" &> /dev/null
done

spark-sql-hms-hudi -e "DROP SCHEMA $SCHEMA_NAME CASCADE;"
mcli rb --force "minio/$BUCKET_NAME"
